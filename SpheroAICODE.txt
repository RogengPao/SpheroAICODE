
const SHOW_COLORS = {
    red: { r: 255, g: 0, b: 0 },
    yellow: { r: 255, g: 255, b: 0 },
    blue: { r: 0, g: 0, b: 255 },
    gold: { r: 255, g: 215, b: 0 },
    green: { r: 0, g: 215, b: 0 }
};


registerMatrixAnimation({
    frames: [
        [
            [0, 0, 1, 1, 1, 1, 1, 1],
            [0, 1, 0, 0, 0, 0, 0, 1],
            [1, 1, 1, 1, 1, 1, 1, 1],
            [0, 1, 0, 0, 1, 0, 0, 1],
            [0, 1, 0, 0, 1, 0, 0, 1],
            [0, 1, 0, 0, 1, 0, 0, 1],
            [1, 1, 0, 1, 1, 0, 1, 1],
            [0, 0, 0, 0, 0, 0, 0, 0]
        ]
    ],
    palette: [{
            r: 0,
            g: 0,
            b: 0
        },{
            r: 236,
            g: 53,
            b: 33
        },
    ],
    fps: 6,
    transition: MatrixAnimationTransition.None

});

registerMatrixAnimation({
    frames: [
        [
            [0, 0, 0, 0, 0, 0, 0, 0],
            [0, 1, 1, 1, 1, 1, 1, 0],
            [1, 1, 1, 1, 1, 1, 1, 1],
            [0, 2, 2, 2, 2, 2, 2, 2],
            [2, 2, 2, 2, 2, 2, 2, 0],
            [1, 1, 1, 1, 1, 1, 1, 1],
            [0, 1, 1, 1, 1, 1, 1, 0],
            [0, 0, 0, 0, 0, 0, 0, 0]
        ]
    ],
    palette: [{
            r: 0,
            g: 0,
            b: 0
        },{
            r: 255,
            g: 215,
            b: 0
        },{
            r: 50,
            g: 199,
            b: 4
        }
			  
    ],
    fps: 6,
    transition: MatrixAnimationTransition.None

});

registerMatrixAnimation({
    frames: [
        [
            [0, 0, 0, 0, 0, 0, 0, 0],
            [1, 0, 0, 0, 0, 0, 0, 0],
            [1, 0, 0, 0, 0, 1, 1, 0],
            [1, 1, 0, 0, 1, 1, 1, 0],
            [1, 1, 1, 1, 1, 1, 1, 1],
            [0, 1, 1, 1, 1, 1, 0, 1],
            [0, 0, 1, 1, 0, 0, 0, 0],
            [0, 0, 1, 1, 0, 0, 0, 0]
        ]
    ],
    palette: [{
            r: 0,
            g: 0,
            b: 0
        },{
            r: 255,
            g: 128,
            b: 0
        }
    ],
    fps: 6,
    transition: MatrixAnimationTransition.None

});

registerMatrixAnimation({
    frames: [
        [
            [1, 1, 1, 1, 1, 1, 1, 1],
            [1, 1, 0, 0, 0, 0, 1, 1],
            [1, 0, 1, 1, 1, 1, 0, 1],
            [1, 0, 1, 0, 0, 1, 0, 1],
            [1, 0, 1, 0, 0, 1, 0, 1],
            [1, 0, 1, 1, 1, 1, 0, 1],
            [1, 1, 0, 0, 0, 0, 1, 1],
            [1, 1, 1, 1, 1, 1, 1, 1]
        ]
    ],
    palette: [{
            r: 0,
            g: 0,
            b: 0
        },{
            r: 204,
            g: 0,
            b: 204
        }
    ],
    fps: 6,
    transition: MatrixAnimationTransition.None

});

registerMatrixAnimation({
    frames: [
        [
            [0, 0, 0, 1, 1, 0, 0, 0],
            [0, 0, 1, 1, 1, 1, 0, 0],
            [0, 1, 1, 1, 1, 1, 1, 0],
            [0, 0, 0, 1, 1, 0, 0, 0],
            [0, 0, 0, 1, 1, 0, 0, 0],
            [0, 0, 0, 1, 1, 0, 0, 0],
            [0, 0, 0, 1, 1, 0, 0, 0],
            [0, 0, 0, 1, 1, 0, 0, 0]
        ]
    ],
    palette: [{
            r: 0,
            g: 0,
            b: 0
        },{
            r: 236,
            g: 215,
            b: 0
        },
    ],
    fps: 6,
    transition: MatrixAnimationTransition.None

});

registerMatrixAnimation({
    frames: [
        [
            [0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 0, 1, 1, 0],
            [1, 1, 1, 1, 1, 1, 1, 1],
            [1, 1, 1, 1, 1, 1, 1, 1],
            [0, 0, 0, 0, 0, 1, 1, 0],
            [0, 0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0]
        ]
    ],
    palette: [{
            r: 0,
            g: 0,
            b: 0
        },{
            r: 236,
            g: 215,
            b: 0
        },
    ],
    fps: 6,
    transition: MatrixAnimationTransition.None

});

registerMatrixAnimation({
    frames: [
        [
            [0, 0, 1, 1, 1, 1, 1, 1],
            [0, 1, 0, 0, 0, 0, 0, 1],
            [1, 1, 1, 1, 1, 1, 1, 1],
            [0, 1, 0, 0, 1, 0, 0, 1],
            [0, 1, 0, 0, 1, 0, 0, 1],
            [0, 1, 0, 0, 1, 0, 0, 1],
            [1, 1, 0, 1, 1, 0, 1, 1],
            [0, 0, 0, 0, 0, 0, 0, 0]
        ],
		[
            [0, 0, 1, 1, 1, 1, 1, 1],
            [0, 1, 0, 1, 0, 0, 0, 1],
            [1, 1, 1, 1, 0, 1, 1, 1],
            [0, 1, 0, 1, 0, 0, 0, 0],
            [0, 1, 0, 1, 0, 0, 0, 0],
            [1, 0, 0, 1, 0, 0, 0, 0],
            [1, 0, 1, 0, 0, 0, 0, 0],
            [0, 0, 1, 0, 0, 0, 0, 0]
        ],
		[
            [0, 0, 1, 1, 1, 1, 1, 1],
            [0, 1, 0, 0, 0, 0, 0, 1],
            [1, 1, 1, 1, 1, 1, 1, 1],
            [0, 0, 0, 0, 1, 0, 1, 0],
            [0, 0, 0, 0, 1, 0, 1, 0],
            [0, 0, 0, 0, 1, 0, 1, 0],
            [0, 0, 0, 1, 0, 0, 1, 0],
            [0, 0, 0, 1, 0, 1, 0, 0]
        ]
    ],
    palette: [{
            r: 0,
            g: 0,
            b: 0
        },{
            r: 236,
            g: 53,
            b: 33
        },
    ],
    fps: 6,
    transition: MatrixAnimationTransition.Fade

});


registerMatrixAnimation({
    frames: [
        [
            [0, 0, 0, 1, 1, 0, 0, 0],
            [0, 0, 1, 1, 1, 1, 0, 0],
            [0, 1, 1, 1, 1, 1, 1, 0],
            [1, 1, 1, 1, 1, 1, 1, 1],
            [1, 1, 1, 1, 1, 1, 1, 1],
            [0, 1, 1, 1, 1, 1, 1, 0],
            [0, 0, 1, 1, 1, 1, 0, 0],
            [0, 0, 0, 1, 1, 0, 0, 0]
        ],
        [
            [1, 0, 0, 0, 0, 0, 0, 1],
            [0, 1, 0, 0, 0, 0, 1, 0],
            [0, 0, 1, 0, 0, 1, 0, 0],
            [0, 0, 0, 1, 1, 0, 0, 0],
            [0, 0, 0, 1, 1, 0, 0, 0],
            [0, 0, 1, 0, 0, 1, 0, 0],
            [0, 1, 0, 0, 0, 0, 1, 0],
            [1, 0, 0, 0, 0, 0, 0, 1]
        ]
    ],
    palette: [{
            r: 0,
            g: 0,
            b: 0
        },{
            r: 229,
            g: 203,
            b: 122
        },{
            r: 50,
            g: 199,
            b: 4
        }
    ],
    fps: 2,
    transition: MatrixAnimationTransition.Fade
});


const showAreas = {
    1: {
        name: "Rides"
    },
    2: {
        name: "Food"
    },
    3: {
        name: "Animals"
    },
    4: {
        name: "Crafts"
    },
};

async function startProgram() {
    await welcomeShow();
	await mapShowgrounds();
	await interactWithAttractions();
	await endShow();

}

async function welcomeShow() {
    await speak("Welcome TO THE PERTH ROYAL SHOW!");
    await scrollMatrixText('W E L C O M E', SHOW_COLORS.gold, 30, true);
    setMainLed(SHOW_COLORS.gold);
    await spin(360, 2);
}

async function mapShowgrounds() {
    clearMatrix();
	playMatrixAnimation(4);
    await speak("In 25 centimeters ahead, you'll reach the thrilling rides.");	
	await displayArea(1);
	await delay (1);
	
	playMatrixAnimation(5);
    await speak("25 centimeters to the right of the rides, you'll discover a variety of delicious food.");
	await displayArea(2);
	await delay (1);
	
	playMatrixAnimation(4);
    await speak("25 centimeters to the left of the food stalls, you'll find the animal exhibits.");
	await displayArea(3);
	await delay (1);
	
	playMatrixAnimation(5);
	setMatrixRotation(180);
    await speak("25 centimeters to the left of the animal exhibits, you'll find the crafts section.");
	await displayArea(4);
	playMatrixAnimation(4);
	clearMatrix();
	setMainLed(SHOW_COLORS.gold);
	setMatrixRotation(0);

}


async function displayArea(areaId) {
    let currentArea = parseInt(areaId);
    playMatrixAnimation(currentArea - 1);
    await speak(showAreas[areaId].name);
    await delay(1);
}


async function interactWithAttractions() {
    clearMatrix();
    await rideAttraction();
    await foodAttraction();
    await animalAttraction();
    await craftAttraction();
}

async function rideAttraction() {
    await speak("Let's go on a ride!");
	playMatrixAnimation(4);
	await roll(0, 50, 3);
	playMatrixAnimation(6);
    await Sound.Ambience.Park.play(true);
}

async function foodAttraction() {
    await speak("Time for some delicious food!");
	playMatrixAnimation(4);
	await roll(90, 50, 3);
    playMatrixAnimation(1);
    await delay(2);
    await speak("Yummy!");
}

async function animalAttraction() {
    await speak("Let's visit the animal pavilion!");
	playMatrixAnimation(4);
	await roll(0, 50, 3);
    playMatrixAnimation(2);
	await Sound.Animal.BabyBird.play(true);
	await delay(2);
}

async function craftAttraction() {
    await speak("Lets go to the craft area!");
	playMatrixAnimation(4);
	await roll(270, 50, 3);
	playMatrixAnimation(3);
	await delay(2);
	await speak("Its beautiful!");
}


async function endShow() {
    setMainLed(SHOW_COLORS.gold);
    await speak("Thank you for visiting the Perth Royal Show!");
    await spin(720, 2);
    playMatrixAnimation(7);
}


